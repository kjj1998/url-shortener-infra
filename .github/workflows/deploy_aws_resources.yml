name: Deploy AWS resources for the url shortener app
run-name: ${{ github.actor }} is deploying AWS resources for the url shortener app

on:
  push:
    branches: [ master ]
env:
  AWS_REGION : ap-southeast-1
  EKS_CLUSTER_NAME: url-shortener-cluster-iac
    
permissions:
      id-token: write
      contents: read

jobs:
  deploy_aws_resources:
    name: 'Deploy AWS resources'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./infra

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::271407076537:role/GitHubAction-url-shortener-infra # change to reflect your IAM role’s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: AWS Whoami
        run: aws sts get-caller-identity
      
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v4.0.0
      
      - name: Install eksctl
        run: |
          ARCH=amd64
          PLATFORM=$(uname -s)_$ARCH
          
          curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
          
          tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
          
          sudo mv /tmp/eksctl /usr/local/bin
      
      - name: Setup Terraform with specified version on the runner
        uses:  hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: "1.8.3"
      
      - name: Terraform init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: test eks
        run: aws eks get-token --cluster-name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::271407076537:role/GitHubAction-url-shortener-infra # change to reflect your IAM role’s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
        
      # - name: Map IAM entity to aws-auth ConfigMap
      #   run: |
      #     eksctl create iamidentitymapping --cluster ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }} --arn arn:aws:sts::271407076537:assumed-role/GitHubAction-url-shortener-infra/GitHub_to_AWS_via_FederatedOIDC
      
      - name: update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: check access
        run: kubectl get svc

      - name: check context
        run: kubectl config get-contexts

      - name: check iam entity
        run: kubectl describe configmap aws-auth -n kube-system

      - name: Terraform init
        working-directory: ./load-balancer-controller
        run: terraform init

      - name: Terraform Plan
        working-directory: ./load-balancer-controller
        run: terraform plan -input=false

      - name: Terraform Apply
        working-directory: ./load-balancer-controller
        run: terraform apply -auto-approve
      
     

      # - name: add IAM for cluster access
      #   # run: eksctl create iamidentitymapping --cluster ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }} --arn arn:aws:iam::271407076537:role/AWSReservedSSO_AdministratorAccess_bfc8bbbd1715d5e8 --no-duplicate-arns --username admin
      #   run: |
      #     aws eks create-access-entry --cluster-name ${{ env.EKS_CLUSTER_NAME }} --principal-arn arn:aws:iam::271407076537:role/aws-reserved/sso.amazonaws.com/ap-southeast-1/AWSReservedSSO_AdministratorAccess_bfc8bbbd1715d5e8 --type STANDARD
      #     aws eks associate-access-policy --cluster-name ${{ env.EKS_CLUSTER_NAME }} --principal-arn arn:aws:iam::271407076537:role/aws-reserved/sso.amazonaws.com/ap-southeast-1/AWSReservedSSO_AdministratorAccess_bfc8bbbd1715d5e8 --access-scope type=cluster --policy-arn arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy

      # # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      # - name: Terraform init
      #   working-directory: ./terraform-cluster
      #   run: terraform init
    
      # # Checks that all Terraform configuration files adhere to a canonical format
      # - name: Terraform Format
      #   working-directory: ./terraform-cluster
      #   run: terraform fmt -check

      # # Generates an execution plan for Terraform
      # - name: Terraform Plan
      #   working-directory: ./terraform-cluster
      #   run: terraform plan -input=false

      # # Apply the changes required to reach the desired state of the configuration
      # - name: Terraform Apply
      #   working-directory: ./terraform-cluster
      #   run: terraform apply -auto-approve

      # - name: apply ingress and namespace k8s resources
      #   working-directory: ./eks
      #   run: |
      #     kubectl apply -f namespace.yaml
      #     kubectl apply -f ingress.yaml
      
     

     